plugins {
    id 'java-library'
}

version 'unspecified'

repositories {
    mavenCentral()
}

jar {
    archiveBaseName.set('ee')
}

dependencies {
    compileOnly group: 'com.google.code.gson', name: 'gson', version: '2.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    compileOnly project(":supertokens-plugin-interface")
    testImplementation project(":supertokens-plugin-interface")

    compileOnly group: 'org.jetbrains', name: 'annotations', version: '13.0'
    testImplementation group: 'org.jetbrains', name: 'annotations', version: '13.0'

    compileOnly project(":supertokens-core")
    testImplementation project(":supertokens-core")
    testImplementation project(":supertokens-core").sourceSets.test.output

    compileOnly 'com.auth0:java-jwt:4.0.0'

    // this is so that we can find plugin-interface jar while testing
    testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'

    // https://mvnrepository.com/artifact/org.reflections/reflections
    testImplementation group: 'org.reflections', name: 'reflections', version: '0.9.10'

    testImplementation 'com.tngtech.archunit:archunit-junit4:0.22.0'
}

task copyJars(type: Copy) {
    into "$buildDir/dependencies"
    from configurations.runtimeClasspath
}

def interfaceName = "io.supertokens.featureflag.EEFeatureFlagInterface"
def className = "io.supertokens.ee.EEFeatureFlag"

task generateMetaInf {
    doFirst {
        mkdir "src/main/resources/META-INF/services"
        file("src/main/resources/META-INF/services/${interfaceName}").text = "${className}"
    }
}

build.dependsOn generateMetaInf

test {
    useJUnitPlatform()
}